Practical 4A
Aim: Programming UI elements: App Bar
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:orientation="vertical"
 tools:context=".MainActivity">
 <!-- Toolbar at the top -->
 <androidx.appcompat.widget.Toolbar
 android:id="@+id/toolbar"
 android:layout_width="match_parent"
 android:layout_height="?attr/actionBarSize"
 android:background="?attr/colorPrimary"
 android:elevation="4dp"
 android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
 app:title="Simple AppBar" />
 <!-- Other UI elements can go below -->
 <!-- For example, a content area -->
</LinearLayout>


MainActivity.java
package com.example.appbar;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import android.graphics.Color;
import android.os.Bundle;
import android.text.SpannableString;
import android.text.style.ForegroundColorSpan;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Toast;
import androidx.appcompat.widget.Toolbar;
public class MainActivity extends AppCompatActivity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
Toolbar toolbar = findViewById(R.id.toolbar);
 setSupportActionBar(toolbar);
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu) {
 getMenuInflater().inflate(R.menu.menu_main, menu);
 return true;
 }
 @Override
 public boolean onPrepareOptionsMenu(Menu menu) {
 for (int i = 0; i < menu.size(); i++) {
 MenuItem item = menu.getItem(i);
 SpannableString s = new SpannableString(item.getTitle());
 s.setSpan(new ForegroundColorSpan(Color.BLACK), 0, s.length(), 0);
 item.setTitle(s);
 }
 return super.onPrepareOptionsMenu(menu);
 }
 @Override
 public boolean onOptionsItemSelected(MenuItem item) {
 int id = item.getItemId();
 if (id == R.id.action_settings) {
 Toast.makeText(this, "Settings Clicked", Toast.LENGTH_SHORT).show();
 return true;
 }
 if (id == R.id.action_settings1) {
 Toast.makeText(this, "Settings1 Clicked", Toast.LENGTH_SHORT).show();
 return true;
 }
 return super.onOptionsItemSelected(item);
 }
}

menu_main.xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto">
 <!-- Menu item 1 -->
 <item
 android:id="@+id/action_settings"
 android:title="Settings"
 android:orderInCategory="100" />
 <!-- Menu item 2 -->
 <item
 android:id="@+id/action_settings1"
android:title="Settings1"
 android:orderInCategory="100" />
</menu>

...............................................

Practical 4B
Aim: Programming Elements: Fragment
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app=http://schemas.android.com/apk/res-auto
xmlns:tools=http://schemas.android.com/tools
android:id="@+id/main"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<Button
android:id="@+id/button_load_fragment"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:text="Load Fragment"/>
<FrameLayout
android:id="@+id/fragment_container"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:layout_marginTop="16dp"/>
</LinearLayout>

MainActivity.java
package com.example.prac4b;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;
public class MainActivity extends AppCompatActivity {
@Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 Button buttonLoadFragment = findViewById(R.id.button_load_fragment);
 buttonLoadFragment.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 loadFragment(new BlankFragment());
 } }); }
 private void loadFragment(Fragment fragment) {
 // Create a FragmentManager
 FragmentManager fragmentManager = getSupportFragmentManager();
 // Create a FragmentTransaction to begin the transaction and replace the Fragment
 FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
 fragmentTransaction.replace(R.id.fragment_container, fragment);
 // Commit the transaction
 fragmentTransaction.commit();
 }}

fragment_blank.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:orientation='horizontal'
 android:gravity="center">
 <TextView android:id="@+id/textView_fragment"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:text="@string/hello_blank_fragment"
 android:textSize="18sp"/>
</LinearLayout>

BlankFragment.java
package com.example.prac4b;
import android.os.Bundle;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
public class BlankFragment extends Fragment {
 @Nullable
 @Override
 public View onCreateView(@NonNull LayoutInflater inflater,@Nullable ViewGroup
container, @Nullable Bundle savedInstanceState) {
 // Inflate the layout for this fragment
 return inflater.inflate(R.layout.fragment_blank, container, false);
 }}
........................................

Practical 4C
Aim: Programming UI elements : UI Components
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:orientation="vertical"
 tools:context=".MainActivity">
 <Button
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:id="@+id/btnSave"
 android:text="Save"
 android:layout_alignParentTop="true"/>
 <ImageButton
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:id="@+id/ib"
 android:src="@mipmap/ic_launcher"/>
 <EditText
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:hint="edit text"
 android:id="@+id/et"/>
 <CheckBox
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:id="@+id/cb1"
 android:text="Auto Save"/>
 <CheckBox
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:id="@+id/cbst"
 android:text=""
 style="?android:attr/starStyle"/>
 <RadioGroup
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:id="@+id/rg">
 <RadioButton
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
android:id="@+id/rb1"
 android:text="Option1"/>
 <RadioButton
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:id="@+id/rb2"
 android:text="Option2"/>
 </RadioGroup>
 <ToggleButton
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:id="@+id/tb"/>
</LinearLayout>

MainActivity.java
package com.example.uicomponents;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Display;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.RadioButton;
import android.widget.ToggleButton;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 Button btsave=(Button) findViewById(R.id.btnSave);
 ImageButton imgb=(ImageButton) findViewById(R.id.ib);
 EditText etext=(EditText) findViewById(R.id.et);
 CheckBox cb1=(CheckBox) findViewById(R.id.cb1);
 CheckBox cbst=(CheckBox) findViewById(R.id.cbst);
 RadioButton rb1=(RadioButton) findViewById(R.id.rb1);
 RadioButton rb2=(RadioButton) findViewById(R.id.rb2);
 ToggleButton tbutton =(ToggleButton) findViewById(R.id.tb);
 btsave.setOnClickListener(new View.OnClickListener()
 {
 @Override
 public void onClick(View v)
 {DisplayToast("Save Button clicked");
 }
 });
 imgb.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 DisplayToast("ImageButton Clicked");
 }
 });
 cb1.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 if(((CheckBox)v).isChecked())
 DisplayToast("CheckBox Option1 is checked");
 else
 DisplayToast(" CheckBox unchecked");
 }
 });
 cbst.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 if(((CheckBox)v).isChecked())
 DisplayToast("CheckBox Option2 is checked");
 else
 DisplayToast(" CheckBox unchecked");
 }
 });
 cbst.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 if(((CheckBox)v).isChecked())
 DisplayToast("CheckBox Option2 is checked");
 else
 DisplayToast(" CheckBox unchecked");
 }
 });
 rb1.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener()
 {
 @Override
 public void onCheckedChanged(CompoundButton buttonView,boolean ischecked)
 {
 if(rb1.isChecked()) {
 DisplayToast("RadioButton 1 is checked");
 }
 else
 DisplayToast("RadioButton 1 is unchecked");}
 });
 rb2.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener()
 {
 @Override
 public void onCheckedChanged(CompoundButton buttonView,boolean ischecked)
 {
 if(rb2.isChecked()) {
 DisplayToast("RadioButton 2 is checked");
 }
 else
 DisplayToast("RadioButton 2 is unchecked");
 }
 });
 tbutton.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 if(tbutton.isChecked()) {
 DisplayToast("ToggleButton is on");
 }
 else
 DisplayToast("ToggleButton is off");
 }
 }); }
 public void DisplayToast(String s)
 {
 Toast.makeText(this,s,Toast.LENGTH_SHORT).show();
 }}

