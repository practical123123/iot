Practical 7A
Aim : Program on Services
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
<Button
 android:id="@+id/btnStart"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Start Service"
 android:onClick="startService"
 app:layout_constraintBottom_toBottomOf="parent"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toTopOf="parent"></Button>
<Button
android:id="@+id/btnStop"
android:onClick="stopService"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:text="Stop Service"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/btnStart">
</Button>
</androidx.constraintlayout.widget.ConstraintLayout>

MyServices.java
package com.example.practical7a;
import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.widget.Toast;
import androidx.annotation.Nullable;
public class MyServices extends Service {
 @Override
 public void onCreate(){
 super.onCreate();
 }
 @Override
 public int onStartCommand(Intent intent, int flags , int startId){
 Toast.makeText(this, "Services Started...", Toast.LENGTH_LONG).show();
 return START_STICKY;
 }
 public void onDestroy(){
 Toast.makeText(this, "Services Destroyed...", Toast.LENGTH_LONG).show();
 }
 @Nullable
 @Override
 public IBinder onBind (Intent intent){
 return null;
 }
}

MainActivity.java
package com.example.practical7a;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.content.Intent;
import android.view.View;
public class MainActivity extends AppCompatActivity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 }
 public void startService(View view)
 {
 Intent intent=new Intent(this, MyServices.class);
 startService(intent);
 }
 public void stopService(View view)
 {
 Intent intent=new Intent(this, MyServices.class);
 stopService(intent);
 }
}
.................................................

Practical 7B
Aim : Programs on notification
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <TextView
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Hello World!"
 app:layout_constraintBottom_toBottomOf="parent"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toTopOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

AndroidManifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools">
<uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>
 <application
 android:allowBackup="true"
 android:dataExtractionRules="@xml/data_extraction_rules"
 android:fullBackupContent="@xml/backup_rules"
 android:icon="@mipmap/ic_launcher"
 android:label="@string/app_name"
 android:roundIcon="@mipmap/ic_launcher_round"
 android:supportsRtl="true"
 android:theme="@style/Theme.Pract"
 tools:targetApi="31">
 <activity
 android:name=".MainActivity"
 android:exported="true">
 <intent-filter>
 <action android:name="android.intent.action.MAIN" />
 <category android:name="android.intent.category.LAUNCHER" />
 </intent-filter>
 </activity>
 </application>
</manifest>

MainActivity.java
package com.example.pract;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.NotificationCompat;
import androidx.core.app.NotificationManagerCompat;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.os.Build;
import android.os.Bundle;
import android.widget.Toast;
import android.view.View;
public class MainActivity extends AppCompatActivity {
public final String CHANNEL_ID="personal_notification";
public final int NOTIFICATION_ID=001;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 }
 public void displayNotification(View view)
 {
 createNotificationChannel();
 Toast.makeText(getApplicationContext(), "Hi", Toast.LENGTH_LONG).show();
 NotificationCompat.Builder builder=new
NotificationCompat.Builder(this,CHANNEL_ID);
 builder.setSmallIcon(R.mipmap.ic_launcher);
 builder.setContentTitle("Simple Notification");
 builder.setContentText("THis is a test Notification");
 builder.setPriority(NotificationCompat.PRIORITY_DEFAULT);
 NotificationManagerCompat
notificationManagerCompat=NotificationManagerCompat.from(this);
 notificationManagerCompat.notify(NOTIFICATION_ID,builder.build());
 }
 private void createNotificationChannel()
 {
 if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O)
 {
 CharSequence name="Personal Notification";
 String description="This is description";
 int importance= NotificationManager.IMPORTANCE_DEFAULT;
 NotificationChannel notificationChannel=new
NotificationChannel(CHANNEL_ID,name,importance);
 notificationChannel.setDescription(description);
 NotificationManager
notificationManager=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);
 notificationManager.createNotificationChannel(notificationChannel);
 }
 }
}
.....................................................
Practical 7C
Aim : Programs on broadcast receivers
MainActivity.java
package com.example.broadcastb;
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
public class MainActivity extends AppCompatActivity {
AirplaneModeChangeReceiver airplaneModeChangeReceiver=new
AirplaneModeChangeReceiver();
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 }
 @Override
 protected void onStart()
 {
 super.onStart();
 IntentFilter filter=new IntentFilter(Intent.ACTION_AIRPLANE_MODE_CHANGED);
 registerReceiver(airplaneModeChangeReceiver,filter);
 }
 @Override
 protected void onStop()
 {
 super.onStop();
 unregisterReceiver(airplaneModeChangeReceiver);
 }
}

Java Class â€“AirplaneModeChangeReceiver.java
package com.example.broadcastb;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.provider.Settings;
import android.widget.Toast;
public class AirplaneModeChangeReceiver extends BroadcastReceiver {
 @Override
 public void onReceive(Context context, Intent intent)
 {
 if(isAirplaneModeOn(context.getApplicationContext()))
 {
 Toast.makeText(context, "AirPlane mode is on", Toast.LENGTH_LONG).show();
 }
 else {
 Toast.makeText(context, "AirPlane mode is off", Toast.LENGTH_LONG).show();
 }
 }
 private static boolean isAirplaneModeOn(Context context)
 {
 return Settings.System.getInt(context.getContentResolver(),
 Settings.Global.AIRPLANE_MODE_ON,0) !=0;
 }
}
