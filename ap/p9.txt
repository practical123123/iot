Practical 9A
Aim : Threads
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:orientation="vertical"
 tools:context=".MainActivity">
 <ProgressBar
 android:id="@+id/progressBar1"
 style="?android:attr/progressBarStyleHorizontal"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:indeterminate="false"
 android:max="10"
 android:padding="4dip"/>
 <Button
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Button"
 android:onClick="startProgress"/>
</LinearLayout>

MainActivity.java
package com.example.practical8a;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.ProgressBar;
public class MainActivity extends AppCompatActivity {
 private ProgressBar bar;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 bar=(ProgressBar) findViewById(R.id.progressBar1);
 }
 public void startProgress(View view){
 bar.setProgress(0);
 new Thread(new Task()).start()
  }
 class Task implements Runnable{
 public void run(){
 for(int i=0;i<=10;i++)
 {
 final int value=i;
 try{
 Thread.sleep(1000);
 }catch (InterruptedException e){
 e.printStackTrace();
 }
 bar.setProgress(value);
 }
 }
 }
}
.....................................
Practical 9B
Aim : Handler
activity_main.xml
package com.example.practical9b;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.TextView;
import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;
public class MainActivity extends AppCompatActivity {
 TextView textView;
 private int stopLoop=30;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 EdgeToEdge.enable(this);
 setContentView(R.layout.activity_main);
 ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) ->
{
 Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
 v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
 return insets;
 });
 textView=(TextView) findViewById(R.id.textView);
 }
 public void timer(View view){
 final Handler handler=new Handler();
 handler.post(new Runnable(){
 public void run(){
 if(stopLoop>0){
 stopLoop--;
 textView.setText("Time:"+stopLoop);
 handler.postDelayed(this,1000);
 }
 else{
 }
 }
 });
 }
 public void nonTimer(View view){
 int i=0;
 for(i=0;i<3;i++){
 textView.setText("Time:"+i);
 try{
 Thread.sleep(1000);
 }catch(InterruptedException e){
 e.printStackTrace();
 }
 }
 }
}

MainActivity.java
package com.example.practical9b;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.TextView;
import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;
public class MainActivity extends AppCompatActivity {
 TextView textView;
 private int stopLoop=30;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 EdgeToEdge.enable(this);
 setContentView(R.layout.activity_main);
 ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) ->
{
 Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
 v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
 return insets;
 });
 textView=(TextView) findViewById(R.id.textView);
 }
 public void timer(View view){
 final Handler handler=new Handler();
 handler.post(new Runnable(){
 public void run(){
 if(stopLoop>0){
 stopLoop--;
 textView.setText("Time:"+stopLoop);
 handler.postDelayed(this,1000);
 }
 else{
 }
 }
 });
 }
 public void nonTimer(View view){
 int i=0;
 for(i=0;i<3;i++){
 textView.setText("Time:"+i);
 try{
 Thread.sleep(1000);
 }catch(InterruptedException e){
 e.printStackTrace();
 }
 }
 }
}
..........................................
Practical 9C
Aim : Programming AsyncTask
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:id="@+id/main"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <TextView
 android:id="@+id/textView"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Hello World!"
 app:layout_constraintBottom_toBottomOf="parent"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintLeft_toLeftOf="parent"
 app:layout_constraintRight_toRightOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toTopOf="parent"
 app:layout_constraintVertical_bias="0.168"/>
 <Button
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:id="@+id/button"
 android:layout_marginTop="112dp"
 android:text="Button"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toTopOf="parent"/>
</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.java
package com.example.prac_9c;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
 TextView textView;
 Button button;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 textView = findViewById(R.id.textView);
 button = findViewById(R.id.button);
 button.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 MyTask myTask = new MyTask(MainActivity.this, textView, button);
 myTask.execute();
 button.setEnabled(false);
 }
 });
  }
}

MyTask.java
package com.example.prac_9c;
import android.app.ProgressDialog;
import android.content.Context;
import android.os.AsyncTask;
import android.widget.Button;
import android.widget.TextView;
public class MyTask extends AsyncTask<Void, Integer, String> {
 Context context;
 Button button;
 TextView textView;
 ProgressDialog progressDialog;
 MyTask(Context context, TextView textView, Button button) {
 this.context = context;
 this.textView = textView;
 this.button = button;
 }
 @Override
 protected void onPreExecute() {
 super.onPreExecute();
 progressDialog = new ProgressDialog(context);
 progressDialog.setTitle("Download in Progress");
 progressDialog.setMax(10);
 progressDialog.setProgress(0);
 progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
 progressDialog.show();
 }
 @Override
  protected void onPostExecute(String s) {
 super.onPostExecute(s);
 progressDialog.dismiss(); // Dismiss progress dialog after completion
 textView.setText("Download Finish");
 button.setEnabled(true);
 }
 @Override
 protected void onProgressUpdate(Integer... values) {
 super.onProgressUpdate(values);
 int progress = values[0];
 progressDialog.setProgress(progress);
 textView.setText("Download In Progress (" + progress + "/10)");
 }
 @Override
 protected String doInBackground(Void... voids) {
 for (int i = 1; i <= 10; i++) {
 try {
 Thread.sleep(1000); // Corrected the issue (previously used wait())
 publishProgress(i);
 } catch (InterruptedException e) {
 e.printStackTrace();
 return "Download Interrupted"; // Handle interruption properly
 }
 }
 return "Download Finish";
 }
}